#* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *#
#*                                                                           *#
#*                  This file is part of the class library                   *#
#*       SoPlex --- the Sequential object-oriented simPlex.                  *#
#*                                                                           *#
#*    Copyright (C) 1996      Roland Wunderling                              *#
#*                  1996-2019 Konrad-Zuse-Zentrum                            *#
#*                            fuer Informationstechnik Berlin                *#
#*                                                                           *#
#*  SoPlex is distributed under the terms of the ZIB Academic Licence.       *#
#*                                                                           *#
#*  You should have received a copy of the ZIB Academic License              *#
#*  along with SoPlex; see the file COPYING. If not email to soplex@zib.de.  *#
#*                                                                           *#
#* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *#

#@file    Makefile
#@brief   SoPlex Makefile for nmake
#@author  Thorsten Koch
#@author  Ambros Gleixner

#-----------------------------------------------------------------------------
# specify host architecture
#-----------------------------------------------------------------------------

OSTYPE		=	win
ARCH		=	x86

#-----------------------------------------------------------------------------
# default settings
#-----------------------------------------------------------------------------

VERSION		=	4.0.3
VERBOSE		=	0
OPT			=	opt
LIBEXT		=	lib
EXEEXT      =	exe

# will this be compiled for PARASCIP? (disables output because it uses global variables)
PARASCIP	   =	false

GMP			=	true
ZLIB		   = 	true

COMP		=	msvc
CXX			=	cl
AR			=	LIB

CPPFLAGS	=	/I$(SRCDIR) /D_CRT_SECURE_NO_WARNINGS 
CXXFLAGS	=	/nologo /EHsc
LDFLAGS		=	/link /STACK:67108864 /OPT:REF /OPT:ICF /NOLOGO
ARFLAGS		=

SRCDIR		=	src
BINDIR		=	bin
LIBDIR		=	lib
NAME		=	soplex
LIBOBJ		=	$(LIBOBJDIR)\changesoplex.obj \
				$(LIBOBJDIR)\clufactor.obj \
				$(LIBOBJDIR)\clufactor_rational.obj \
				$(LIBOBJDIR)\didxset.obj \
				$(LIBOBJDIR)\enter.obj \
				$(LIBOBJDIR)\gzstream.obj \
				$(LIBOBJDIR)\idxset.obj \
				$(LIBOBJDIR)\leave.obj \
				$(LIBOBJDIR)\mpsinput.obj \
				$(LIBOBJDIR)\nameset.obj \
				$(LIBOBJDIR)\rational.obj \
				$(LIBOBJDIR)\ratrecon.obj \
				$(LIBOBJDIR)\slufactor.obj \
				$(LIBOBJDIR)\slufactor_rational.obj \
				$(LIBOBJDIR)\solverational.obj \
				$(LIBOBJDIR)\solvereal.obj \
				$(LIBOBJDIR)\soplex.obj \
				$(LIBOBJDIR)\spxautopr.obj \
				$(LIBOBJDIR)\spxbasis.obj \
				$(LIBOBJDIR)\spxboundflippingrt.obj \
				$(LIBOBJDIR)\spxbounds.obj \
				$(LIBOBJDIR)\spxchangebasis.obj \
				$(LIBOBJDIR)\spxdantzigpr.obj \
				$(LIBOBJDIR)\spxdefaultrt.obj \
				$(LIBOBJDIR)\spxdefines.obj \
				$(LIBOBJDIR)\spxdesc.obj \
				$(LIBOBJDIR)\spxdevexpr.obj \
				$(LIBOBJDIR)\spxequilisc.obj \
				$(LIBOBJDIR)\spxfastrt.obj \
				$(LIBOBJDIR)\spxfileio.obj \
				$(LIBOBJDIR)\spxgeometsc.obj \
				$(LIBOBJDIR)\spxgithash.obj \
				$(LIBOBJDIR)\spxharrisrt.obj \
				$(LIBOBJDIR)\spxhybridpr.obj \
				$(LIBOBJDIR)\spxid.obj \
				$(LIBOBJDIR)\spxlpbase_rational.obj \
				$(LIBOBJDIR)\spxlpbase_real.obj \
				$(LIBOBJDIR)\spxmainsm.obj \
				$(LIBOBJDIR)\spxout.obj \
				$(LIBOBJDIR)\spxparmultpr.obj \
				$(LIBOBJDIR)\spxquality.obj \
				$(LIBOBJDIR)\spxscaler.obj \
				$(LIBOBJDIR)\spxshift.obj \
				$(LIBOBJDIR)\spxsolve.obj \
				$(LIBOBJDIR)\spxsolver.obj \
				$(LIBOBJDIR)\spxstarter.obj \
				$(LIBOBJDIR)\spxsteeppr.obj \
				$(LIBOBJDIR)\spxsumst.obj \
				$(LIBOBJDIR)\spxvecs.obj \
				$(LIBOBJDIR)\spxvectorst.obj \
				$(LIBOBJDIR)\spxweightpr.obj \
				$(LIBOBJDIR)\spxweightst.obj \
				$(LIBOBJDIR)\spxwritestate.obj \
				$(LIBOBJDIR)\statistics.obj \
				$(LIBOBJDIR)\usertimer.obj \
				$(LIBOBJDIR)\wallclocktimer.obj \
				$(LIBOBJDIR)\updatevector.obj
BINOBJ		=	$(BINOBJDIR)\soplexmain.obj
EXAMPLEOBJ	=	$(BINOBJDIR)\example.obj

BASE		=	$(OSTYPE).$(ARCH).$(COMP).$(OPT)

#------------------------------------------------------------------------------
#--- NOTHING TO CHANGE FROM HERE ON -------------------------------------------
#------------------------------------------------------------------------------

#-----------------------------------------------------------------------------
!include make/nmake.$(BASE)
#-----------------------------------------------------------------------------

#-----------------------------------------------------------------------------
# user flags
#-----------------------------------------------------------------------------

CXXFLAGS	=	$(CXXFLAGS) $(USRCXXFLAGS)
LDFLAGS		=	$(LDFLAGS) $(USRLDFLAGS)
ARFLAGS		=	$(ARFLAGS) $(USRARFLAGS)

#-----------------------------------------------------------------------------
# PARASCIP
#-----------------------------------------------------------------------------

!if "$(PARASCIP)" == "true"
CPPFLAGS	=	$(CPPFLAGS) /DDISABLE_VERBOSITY
!endif

#-----------------------------------------------------------------------------
# Main Program
#-----------------------------------------------------------------------------

BINNAME		=	$(NAME)-$(VERSION).$(BASE)
EXAMPLENAME	=	example.$(BASE)
LIBNAME		=	$(NAME)-$(VERSION).$(BASE)
BINFILE		=	$(BINDIR)\$(BINNAME).$(EXEEXT)
EXAMPLEFILE	=	$(BINDIR)\$(EXAMPLENAME).$(EXEEXT)
LIBFILE		=	$(LIBDIR)\lib$(LIBNAME).$(LIBEXT)
DEPEND		=	src\depend

OBJDIR		=	obj\O.$(BASE)
BINOBJDIR	=	$(OBJDIR)\bin
LIBOBJDIR	=	$(OBJDIR)\lib

#-----------------------------------------------------------------------------
# External Libraries
#-----------------------------------------------------------------------------

!if "$(GMP)" == "true"
CPPFLAGS	=	$(CPPFLAGS) /Ilib\mpir.$(ARCH) /DSOPLEX_WITH_GMP
LIBS		=	$(LIBS) lib\libmpir.$(ARCH).lib
!endif

!if "$(ZLIB)" == "true"
CPPFLAGS	=	$(CPPFLAGS) /Ilib\zlib /DSOPLEX_WITH_ZLIB
LIBS		=	$(LIBS) lib\libz.$(ARCH).lib
LDFLAGS		=	$(LDFLAGS) /NODEFAULTLIB:LIBCMT /NODEFAULTLIB:LIBCMTD
!endif

#-----------------------------------------------------------------------------
# Rules
#-----------------------------------------------------------------------------

!if $(VERBOSE) == 0
!CMDSWITCHES +S
!endif

all:		$(LIBFILE) $(BINFILE) 

example:	$(LIBFILE) $(EXAMPLEFILE) 

$(BINFILE):	$(BINDIR) $(BINOBJDIR) $(LIBFILE) $(BINOBJ)
		@echo "-> linking $@"
		$(CXX) $(CXXFLAGS) $(BINOBJ) $(LIBS) /Fe$@ $(LDFLAGS) $(LIBFILE)
		
$(EXAMPLEFILE):	$(BINDIR) $(EXAMPLEOBJDIR) $(LIBFILE) $(EXAMPLEOBJ)
		@echo "-> linking $@"
		$(CXX) $(CXXFLAGS) $(EXAMPLEOBJ) $(LIBFILE) $(LIBS) /Fe$@ $(LDFLAGS)

$(LIBFILE):	$(LIBDIR) $(LIBOBJDIR) $(LIBOBJ) 
		@echo "-> generating library $@"
		@-del $(LIBFILE)
		$(AR) $(ARFLAGS) $(LIBOBJ) /OUT:$@

cleanbin:	$(BINDIR)
		@echo "remove binary $(BINFILE)"
		@-del $(BINFILE)

cleanlib:	$(LIBDIR)
		@echo "remove library $(LIBFILE)" 
		@-del $(LIBFILE)

clean:		cleanlib cleanbin $(LIBOBJDIR) $(BINOBJDIR) $(OBJDIR)
		@echo "remove objective files" 
		@-del /Q $(LIBOBJDIR)\*.obj 
		@-del /Q $(BINOBJDIR)\*.obj 
		@-del $(EXAMPLEFILE)

$(OBJDIR):
		@-mkdir $(OBJDIR)

$(BINOBJDIR):	$(OBJDIR)
		@-mkdir $(BINOBJDIR)

$(LIBOBJDIR):	$(OBJDIR)
		@-mkdir $(LIBOBJDIR)

$(BINDIR):
		@-mkdir $(BINDIR)

$(LIBDIR):
		@-mkdir $(LIBDIR)

!include	$(DEPEND)

{$(SRCDIR)}.cpp{$(BINOBJDIR)}.obj:
		@echo "-> compiling $@"
		$(CXX) $(CPPFLAGS) $(CXXFLAGS) /c $< /Fo$@

{$(SRCDIR)}.cpp{$(LIBOBJDIR)}.obj:
		@echo "-> compiling $@"
		$(CXX) $(CPPFLAGS) $(CXXFLAGS) /c $< /Fo$@

# --- EOF ---------------------------------------------------------------------